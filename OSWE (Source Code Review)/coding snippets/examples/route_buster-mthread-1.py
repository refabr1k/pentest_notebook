#!/usr/bin/env python3

import argparse
import requests
import concurrent.futures
import time

proxies = {'http':'http://127.0.0.1:8080', 'https':'https://127.0.0.1:8080'}

def perform_requests(target, endpoint, fuzz_word):
    url = f"{target}/{endpoint}/{fuzz_word}"
    # print('\r\{endpoint}\{fuzz_word}'.format(endpoint=endpoint.strip(), fuzz_word=fuzz_word.strip()), end='', flush=True)
    
    # with httpx.Client() as client:

    get_response = requests.get(url=url,proxies=proxies)
    post_response = requests.post(url=url,proxies=proxies)

    get_status_code = get_response.status_code
    post_status_code = post_response.status_code

    if get_status_code not in [204, 401, 403, 404] or post_status_code not in [204, 401, 403, 404]:
        # sys.stdout.flush()
        return (endpoint, fuzz_word, get_status_code,post_status_code)


parser = argparse.ArgumentParser()
parser.add_argument("--target", help="URL to target", required=True)
parser.add_argument("--endpoints", help="Path to endpoints file", required=True)
parser.add_argument("--fuzz-words", help="Path to fuzz words file", required=True)
args = parser.parse_args()


endpoints = []
with open(args.endpoints, "r") as endpoints_file:
    endpoints = [line.strip() for line in endpoints_file]

fuzz_words = []
with open(args.fuzz_words, "r") as fuzz_words_file:
    fuzz_words = [line.strip() for line in fuzz_words_file]

print("URL\t\t\t\t\tGET\tPOST")
with concurrent.futures.ThreadPoolExecutor(max_workers=50) as executor:
    future_to_request = {
        executor.submit(perform_requests, args.target, endpoint, fuzz_word): (endpoint, fuzz_word)
        for endpoint in endpoints
        for fuzz_word in fuzz_words
    }

    for future in concurrent.futures.as_completed(future_to_request):
        endpoint, fuzz_word = future_to_request[future]
        try:
            result = future.result()
            if result:
                endpoint, fuzz_word, get_status_code, post_status_code = result
                print(f"\{endpoint}\{fuzz_word}\t\t\t\t{get_status_code}\t{post_status_code}")
        except Exception as e:
            print(f"Exception: {e}")

