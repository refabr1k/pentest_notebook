from http.server import BaseHTTPRequestHandler, HTTPServer
import logging
import os
from urllib.parse import unquote


#####################################################
##  Webserver that catches data that is sent to it
#####################################################

LISTENING_PORT = 8000 # MODIFY

class S(BaseHTTPRequestHandler):
    def _set_response(self):
        self.send_response(200)
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Content-Type', 'text/html')
        self.end_headers()

    def do_GET(self):
        #logging
        self._set_response()
        self.wfile.write("ADMIN! GET request for {}".format(self.path).encode('utf-8'))

    def do_POST(self):
        content_length = int(self.headers['Content-Length']) #<--- get size of data
        post_data = self.rfile.read(content_length) #<--- gets the data itself
        content = unquote(post_data.decode('utf-8')).split("&")
        outputpath = "output" + "/" + content[0].replace("/","_").replace("url=","") + ".html"
        with open(outputpath, "w") as f:
            f.write(content[1].replace("content=",""))

        #logging
        
        self._set_response()
        self.wfile.write("POST request for {}".format(self.path).encode('utf-8'))


def run(server_class=HTTPServer, handler_class=S, port=LISTENING_PORT):
    logging.basicConfig(level=logging.INFO)
    server_address = ('',port)
    httpd = server_class(server_address, handler_class)
    logging.info('starting httpd...\n')

    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        pass
    httpd.server_close()
    logging.info('stopping httpd...\n')

if __name__ == '__main__':
    from sys import argv

    if len(argv) == 2:
        run(port=int(argv[1]))
    else:
        run()